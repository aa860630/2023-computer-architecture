.data

test: .word 0x3f99999a

exp_mask: .word 0x7F800000
man_mask: .word 0x007FFFFF

infinity_mask: .word 0x7F800000
right_shfit8_mask: .word 0x00008000
result_mask: .word 0xFFFF0000

valueis: .string "value is:"
nextline: .string "\n"

.text
.globl fp32_to_bf16



fp32_to_bf16:
    # s0 : test
    # s1 : exp
    # s2 : man
    la s0 test
    lw s0 0(s0)
    la s1 exp_mask
    lw s1 0(s1)
    la s2 man_mask
    lw s2 0(s2)
    and s1 s0 s1   #只取test的exp部分
    and s2 s0 s2   #只取test的man部分
    
    bnez s1 exp_isnt_0  #若exp為0的話盡速下一行做第二次判別
    beqz s2 return_x    #若man也為0，return x

exp_isnt_0:
    #S1 : infinity
    #S2 : pr
    #S3 : p
    #S3 : r
    la s3 infinity_mask
    lw s3 0(s3)
    beq s1 s3 return_x #若exp為11111111則跳infinity
    
    la t0 right_shfit8_mask #右移8位
    lw t0 0(t0)
    add s0, s0, t0
    la t0, result_mask #32->16捨棄小數右邊16個bits
    lw t0, 0(t0)
    and s0, s0, t0
    
return_x:
    addi t4 zero 0 
print_number:
    # t0 : valueis
    # t1 : \n
    la t0 valueis
    mv a0 t0
    li a7,4
    ecall
    mv a0, s0
    li a7,34
    ecall
    la t1, nextline
    mv a0, t1
    li a7,4
    ecall
